name: Build

on:
  push:
    branches-ignore:
      - 'abandoned-*'
  schedule:
    # Daily at 2AM
    # * is a special character in YAML so you have to quote this string
    - cron: '0 2 * * *'

env:
  BUILDKIT_PROGRESS: plain
  PROGRESS_NO_TRUNC: 1
  cache-name: docker-cache-17

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Cache docker
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/docker_cache
          # Always want a cache miss on the first build of the day, which should be the scheduled
          # overnight one. Proves the build works from scratch, and gives you a nice clean cache to
          # work with each day.
          key: ${{ env.cache-name }}_${{ steps.date.outputs.date }}-${{ github.ref }}-${{ github.run_number }}
          restore-keys: |
            ${{ env.cache-name }}_${{ steps.date.outputs.date }}-${{ github.ref }}-
            ${{ env.cache-name }}_${{ steps.date.outputs.date }}-

      - name: Restore docker
        run: .github/actions/docker-cache/restore.sh ${{ runner.temp }}/docker_cache/cache.tar

      - name: Get build output
        run: >-
          docker build .
          --target build-output
          --output build

      - name: Build
        run: >-
          docker build .
          --output build/libs

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: Unit Test Results
          junit_files: |
            build/test-results/**/*.xml

      - name: Archive build results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: build-reports
          path: build/reports

      - name: Archive output
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: build/libs

      - name: Backup docker
        run: .github/actions/docker-cache/backup.sh ${{ runner.temp }}/docker_cache/cache.tar
